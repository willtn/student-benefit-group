{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Option } from 'funfix-core';\nimport { Address, RawAddress } from 'address';\n\nexport class StudentBenefitGroup {\n  public static fromRaw(raw: RawStudentBenefitGroup): StudentBenefitGroup {\n    return new StudentBenefitGroup(raw.id, raw.owner, raw.pledge, StudentBenefitGroupData.fromRaw(raw.data), raw.members);\n  }\n\n  public static toRaw(group: StudentBenefitGroup) {\n    return {\n      id: group.id,\n      owner: group.owner,\n      pledge: group.pledge,\n      data: group.data.toRaw(),\n      members: group.members\n    };\n  }\n\n  constructor(\n    public id: string,\n    public owner: string,\n    public pledge: string,\n    public data: StudentBenefitGroupData,\n    public members: number\n  ) { }\n}\n\nexport interface RawStudentBenefitGroup {\n  id: string;\n  owner: string;\n  pledge: string;\n  data: RawStudentBenefitGroupData;\n  members: number;\n}\n\nexport class StudentBenefitGroupData {\n  public static fromRaw(raw: RawStudentBenefitGroupData): StudentBenefitGroupData {\n    return new StudentBenefitGroupData(raw.id, Option.of(raw.name), Option.of(raw.description), Option.of(raw.website), Option.of(raw.email), Option.of(raw.facebook), Option.of(raw.twitter), Address.fromRaw(raw.address));\n  }\n\n  public static toRaw(data: StudentBenefitGroupData): RawStudentBenefitGroupData {\n    return {\n      address: Address.toRaw(data.address),\n      description: data.description.orUndefined(),\n      email: data.email.orUndefined(),\n      facebook: data.facebook.orUndefined(),\n      id: data.id,\n      name: data.name.orUndefined(),\n      twitter: data.twitter.orUndefined(),\n      website: data.website.orUndefined()\n    };\n  }\n\n  constructor(\n    public id: string,\n    public name: Option<string> = Option.none(),\n    public description: Option<string> = Option.none(),\n    public website: Option<string> = Option.none(),\n    public email: Option<string> = Option.none(),\n    public facebook: Option<string> = Option.none(),\n    public twitter: Option<string> = Option.none(),\n    public address: Address = new Address('')\n  ) { }\n\n  public toRaw() {\n    return StudentBenefitGroupData.toRaw(this);\n  }\n}\n\nexport interface RawStudentBenefitGroupData {\n  address: RawAddress;\n  description?: string;\n  email?: string;\n  facebook?: string;\n  id: string;\n  name?: string;\n  twitter?: string;\n  website?: string;\n}\n\nexport class StudentBenefitGroupSubscription {\n  constructor(\n    public id: string,\n    public owner: string, // subscriber\n    public group: string // subscribee\n  ) { }\n}\n"]}